// Generated by view binder compiler. Do not edit!
package com.pk.tiler_buddy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.pk.tiler_buddy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ObstacleLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton deleteObs;

  @NonNull
  public final TextView obsBottomTxt;

  @NonNull
  public final EditText obsFromBot;

  @NonNull
  public final EditText obsFromLeft;

  @NonNull
  public final EditText obsHeightIn;

  @NonNull
  public final TextView obsHeightTxt;

  @NonNull
  public final TextView obsLeftTxt;

  @NonNull
  public final EditText obsLengthIn;

  @NonNull
  public final TextView obsLengthTxt;

  @NonNull
  public final TextView obsName;

  private ObstacleLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton deleteObs,
      @NonNull TextView obsBottomTxt, @NonNull EditText obsFromBot, @NonNull EditText obsFromLeft,
      @NonNull EditText obsHeightIn, @NonNull TextView obsHeightTxt, @NonNull TextView obsLeftTxt,
      @NonNull EditText obsLengthIn, @NonNull TextView obsLengthTxt, @NonNull TextView obsName) {
    this.rootView = rootView;
    this.deleteObs = deleteObs;
    this.obsBottomTxt = obsBottomTxt;
    this.obsFromBot = obsFromBot;
    this.obsFromLeft = obsFromLeft;
    this.obsHeightIn = obsHeightIn;
    this.obsHeightTxt = obsHeightTxt;
    this.obsLeftTxt = obsLeftTxt;
    this.obsLengthIn = obsLengthIn;
    this.obsLengthTxt = obsLengthTxt;
    this.obsName = obsName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ObstacleLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ObstacleLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.obstacle_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ObstacleLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delete_obs;
      ImageButton deleteObs = ViewBindings.findChildViewById(rootView, id);
      if (deleteObs == null) {
        break missingId;
      }

      id = R.id.obs_bottom_txt;
      TextView obsBottomTxt = ViewBindings.findChildViewById(rootView, id);
      if (obsBottomTxt == null) {
        break missingId;
      }

      id = R.id.obs_from_bot;
      EditText obsFromBot = ViewBindings.findChildViewById(rootView, id);
      if (obsFromBot == null) {
        break missingId;
      }

      id = R.id.obs_from_left;
      EditText obsFromLeft = ViewBindings.findChildViewById(rootView, id);
      if (obsFromLeft == null) {
        break missingId;
      }

      id = R.id.obs_height_in;
      EditText obsHeightIn = ViewBindings.findChildViewById(rootView, id);
      if (obsHeightIn == null) {
        break missingId;
      }

      id = R.id.obs_height_txt;
      TextView obsHeightTxt = ViewBindings.findChildViewById(rootView, id);
      if (obsHeightTxt == null) {
        break missingId;
      }

      id = R.id.obs_left_txt;
      TextView obsLeftTxt = ViewBindings.findChildViewById(rootView, id);
      if (obsLeftTxt == null) {
        break missingId;
      }

      id = R.id.obs_length_in;
      EditText obsLengthIn = ViewBindings.findChildViewById(rootView, id);
      if (obsLengthIn == null) {
        break missingId;
      }

      id = R.id.obs_length_txt;
      TextView obsLengthTxt = ViewBindings.findChildViewById(rootView, id);
      if (obsLengthTxt == null) {
        break missingId;
      }

      id = R.id.obs_name;
      TextView obsName = ViewBindings.findChildViewById(rootView, id);
      if (obsName == null) {
        break missingId;
      }

      return new ObstacleLayoutBinding((ConstraintLayout) rootView, deleteObs, obsBottomTxt,
          obsFromBot, obsFromLeft, obsHeightIn, obsHeightTxt, obsLeftTxt, obsLengthIn, obsLengthTxt,
          obsName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
