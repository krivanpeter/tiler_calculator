// Generated by view binder compiler. Do not edit!
package com.pk.tiler_buddy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.pk.tiler_buddy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInputBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button buttonCalc;

  @NonNull
  public final TextView buttonObs;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final ConstraintLayout layoutObs;

  @NonNull
  public final SwitchMaterial tenPercent;

  @NonNull
  public final TextView tile;

  @NonNull
  public final EditText tileHeightIn;

  @NonNull
  public final TextView tileHeightTxt;

  @NonNull
  public final EditText tileLengthIn;

  @NonNull
  public final TextView tileLengthTxt;

  @NonNull
  public final TextView wall;

  @NonNull
  public final EditText wallHeightIn;

  @NonNull
  public final TextView wallHeightTxt;

  @NonNull
  public final EditText wallLengthIn;

  @NonNull
  public final TextView wallLengthTxt;

  private ActivityInputBinding(@NonNull ScrollView rootView, @NonNull Button buttonCalc,
      @NonNull TextView buttonObs, @NonNull LinearLayout container,
      @NonNull ConstraintLayout layoutObs, @NonNull SwitchMaterial tenPercent,
      @NonNull TextView tile, @NonNull EditText tileHeightIn, @NonNull TextView tileHeightTxt,
      @NonNull EditText tileLengthIn, @NonNull TextView tileLengthTxt, @NonNull TextView wall,
      @NonNull EditText wallHeightIn, @NonNull TextView wallHeightTxt,
      @NonNull EditText wallLengthIn, @NonNull TextView wallLengthTxt) {
    this.rootView = rootView;
    this.buttonCalc = buttonCalc;
    this.buttonObs = buttonObs;
    this.container = container;
    this.layoutObs = layoutObs;
    this.tenPercent = tenPercent;
    this.tile = tile;
    this.tileHeightIn = tileHeightIn;
    this.tileHeightTxt = tileHeightTxt;
    this.tileLengthIn = tileLengthIn;
    this.tileLengthTxt = tileLengthTxt;
    this.wall = wall;
    this.wallHeightIn = wallHeightIn;
    this.wallHeightTxt = wallHeightTxt;
    this.wallLengthIn = wallLengthIn;
    this.wallLengthTxt = wallLengthTxt;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInputBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInputBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_input, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInputBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_calc;
      Button buttonCalc = ViewBindings.findChildViewById(rootView, id);
      if (buttonCalc == null) {
        break missingId;
      }

      id = R.id.button_obs;
      TextView buttonObs = ViewBindings.findChildViewById(rootView, id);
      if (buttonObs == null) {
        break missingId;
      }

      id = R.id.container;
      LinearLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.layout_obs;
      ConstraintLayout layoutObs = ViewBindings.findChildViewById(rootView, id);
      if (layoutObs == null) {
        break missingId;
      }

      id = R.id.ten_percent;
      SwitchMaterial tenPercent = ViewBindings.findChildViewById(rootView, id);
      if (tenPercent == null) {
        break missingId;
      }

      id = R.id.tile;
      TextView tile = ViewBindings.findChildViewById(rootView, id);
      if (tile == null) {
        break missingId;
      }

      id = R.id.tile_height_in;
      EditText tileHeightIn = ViewBindings.findChildViewById(rootView, id);
      if (tileHeightIn == null) {
        break missingId;
      }

      id = R.id.tile_height_txt;
      TextView tileHeightTxt = ViewBindings.findChildViewById(rootView, id);
      if (tileHeightTxt == null) {
        break missingId;
      }

      id = R.id.tile_length_in;
      EditText tileLengthIn = ViewBindings.findChildViewById(rootView, id);
      if (tileLengthIn == null) {
        break missingId;
      }

      id = R.id.tile_length_txt;
      TextView tileLengthTxt = ViewBindings.findChildViewById(rootView, id);
      if (tileLengthTxt == null) {
        break missingId;
      }

      id = R.id.wall;
      TextView wall = ViewBindings.findChildViewById(rootView, id);
      if (wall == null) {
        break missingId;
      }

      id = R.id.wall_height_in;
      EditText wallHeightIn = ViewBindings.findChildViewById(rootView, id);
      if (wallHeightIn == null) {
        break missingId;
      }

      id = R.id.wall_height_txt;
      TextView wallHeightTxt = ViewBindings.findChildViewById(rootView, id);
      if (wallHeightTxt == null) {
        break missingId;
      }

      id = R.id.wall_length_in;
      EditText wallLengthIn = ViewBindings.findChildViewById(rootView, id);
      if (wallLengthIn == null) {
        break missingId;
      }

      id = R.id.wall_length_txt;
      TextView wallLengthTxt = ViewBindings.findChildViewById(rootView, id);
      if (wallLengthTxt == null) {
        break missingId;
      }

      return new ActivityInputBinding((ScrollView) rootView, buttonCalc, buttonObs, container,
          layoutObs, tenPercent, tile, tileHeightIn, tileHeightTxt, tileLengthIn, tileLengthTxt,
          wall, wallHeightIn, wallHeightTxt, wallLengthIn, wallLengthTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
